1. Control Structures
    1. Tasks/Subroutines
        1. task taskname()\{\ body\}\\
        2. startTask(taskname);\
        3. void subname(arguments)\{\ body\}\\
    2. Variable Definitions
        1. bool name;\
        2. int name;\
        3. long name;\
        4. float name;\
        5. typedef enum\{\ enum1,\ enum2\} enumTypeName;
        6. #define macro() definition\
        7. #undef macro\
        8. #include "filename"\
    3. if Statements
        1. if(condition) statement;\
        2. if(condition)\ statement;\
        3. if(condition)\ statement;\else\statement;\
        4. if(condition)\{\body\}\
        5. if(condition)\{\body\}\else\{\body\}\
    4. Control Structures
        1. for (initial; condition; increment)\{\body\}\
        2. while (condition)\{\body\}\
        3. do\{\body}\while (condition)\
        4. switch (var)\{\case num:\ body\ break;\\default\ body\}\
    5. Natural Language
        1. waitUntil(condition);
        2. repeat(forever)\{\ body\}\
        3. repeat(numberOfTimes)\{\body\}\
        4. repeatUntil(condition)\{\body\}\
2. EV3 LED
    1. EV3 LED
        1. setLEDColor(LEDpatterns);
3. Motors
    1. Commands
        1. getMotorEncoder(nMotorIndex);
4. Natural Language
    1. Simple Behaviors
        1. backward(quantity,unitType,speed);
        2. forward(quantity,unitType,speed);
        3. moveMotor(motorPort,quantity,unitType,speed);
        4. turnLeft(quantity,unitType,speed);
        5. turnRight(quantity,unitType,speed);
    2. Motor Commands
        1. resetMotorEncoder(nMotorIndex);
        2. setMotor(motorPort,speed);
        3. setMultipleMotors(speed, firstMotor, secondMotor, thirdMotor, fourthMotor);
        4. stopAllMotors();
        5. stopMotor(motorPort);
        6. stopMultipleMotors( firstMotor, secondMotor, thirdMotor, fourthMotor);
    3. Remote Control
        1. arcadeControl(verticalJoystick,horizontalJoystick,thrshold);
        2. armControl(armMotorPort,upButton,downButton,armSpeed);
        3. setJoystickScale(nScaledPercentage);
        4. tankControl(rightHoystick,leftJoystick,threshold);
    4. Timing
        1. getTimer(currentTimer,unitType);
        2. resetTimer(currentTimer);
        3. wait(quantity,unitType);
    5. Line Tracking
        1. lineTrackLeft(sensorName,threshold,speedPrimary,speedSecondary);
        2. lineTrackRight(sensorName,threshold,speedPrimary,speedSecondary);
    6. Datalog
        1. datalogClear();
        2. datalogRate(quantity,unitType);
        3. datalogStart(quantity,unitType);
        4. datalogStop();
    7. Display
        1. displayMotorValues(lineNumber,nDeviceIndex);
        2. displaySensorValues(lineNumber,nDeviceIndex);
        3. displayText(lineNumber,sString);
        4. displayVariableValues(lineNumber,value);
5. Sonsors
    1. Variables
        1. SensorValue[]
    2. Color Sensor
        1. getColorAmbient(nDeviceIndex);
        2. getColorHue(nDeviceIndex);
        3. getColorName(nDeviceIndex);
        4. getColorReflected(nDeviceIndex);
        5. getColorRGB(nDeviceIndex,pRedChannel,pGreenChannel,pBlueChannel);
        6. getColorSaturation(nDeviceIndex);
    3. Gyro Sensor
        1. getGyroDegrees(nDeviceIndex);
        2. getGyroHeading(nDeviceIndex);
        3. getGyroRate(nDeviceIndex);
        4. resetGyro(nDeviceIndex);
    4. Touch Sensor
        1. 
    5. Ultrasonic Sensor
        1. 
    6. Infrared Sensor
        1. 
6. Sound
    1. Sounds
7. Timing
    1. Commands
        1. clearTimer(theTimer);
        2. sleep(nMsec);
    2. Variables
